name: Build & Push Docker Image to GHCR

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Deployment target (test or prod)"
        required: true
        default: "test"
        type: choice
        options:
          - test
          - prod

jobs:
  build-and-push:
    name: Build and Push (${{ github.event.inputs.environment }}) to GHCR
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Environment Variable
        id: set_env
        run: echo "environment=${{ github.event.inputs.environment }}" >> $GITHUB_OUTPUT

      - name: Lowercase Repository Owner
        id: case_owner
        run: echo "repository_owner_lc=$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry (GHCR)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/philipjurke-${{ steps.set_env.outputs.environment }}
          tags: |
            # Unique tag per commit: sha-a1b2c3d
            type=sha,prefix=sha-

            # Environment-specific tag per commit: test-sha-a1b2c3d / prod-sha-a1b2c3d
            type=sha,prefix=${{ steps.set_env.outputs.environment }}-sha-

            # Environment-specific "latest" tag: test-latest / prod-latest
            type=raw,value=${{ steps.set_env.outputs.environment }}-latest

            # General 'latest' tag only if environment is 'prod'
            type=raw,value=latest,enable=${{ github.event.inputs.environment == 'prod' }}

      - name: Build and push Docker image
        id: build_push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # Uses an environment-specific cache
          cache-from: type=registry,ref=ghcr.io/${{ github.repository_owner }}/philipjurke-${{ steps.set_env.outputs.environment }}:buildcache
          cache-to: type=registry,ref=ghcr.io/${{ github.repository_owner }}/philipjurke-${{ steps.set_env.outputs.environment }}:buildcache,mode=max

      - name: Deploy to server via SSH
        if: success()
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd /projects/reverse-proxy
            docker-compose pull philipjurke-${{ steps.set_env.outputs.environment }}
            docker-compose up -d --no-deps philipjurke-${{ steps.set_env.outputs.environment }}
            docker image prune -f